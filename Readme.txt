전자정보 보안기술

중앙대학교 산업보안학과 1학년
20234748 나선우

전자정보 보안기술 과제입니다.
(https://github.com/karu-rress/dist-assignment)

파일 설명 및 기본적인 사항은 'README.md'에 기술되어 있습니다. (GitHub 업로드용)

#### 안내
본 웹서비스가 정상적으로 동작하려면 로컬 컴퓨터의 mysql 서버에서 다음 계정이 필요합니다.
>>> ID: server
>>> PW: 20234748

./runme.exe -i 를 실행하면 위 계정을 생성할 수 있는 코드를 출력하므로,
이를 복사하여 붙여넣으면 계정 추가 및 권한 설정이 완료됩니다.

#### 웹페이지 소개

- 본 페이지에서는 데이터베이스에 저장된 도서 목록을 확인하고, 대출할 수 있습니다.  
- 회원가입 및 로그인이 가능하며, 비밀번호는 SHA-256으로 암호화되어 저장됩니다.  
- 사용자 계정으로 로그인한 경우, 도서 대출 및 반납이 가능합니다.  
- 고급 검색 기능을 제공하며, AND 및 OR 조건으로 검색이 가능합니다.  
- admin 계정으로 접속시 도서의 정보 및 대출 상태를 관리할 수 있습니다.
- admin의 경우 각 도서를 클릭하면 나타나는 상세 페이지에서 관리자<->사용자 모드를 전환할 수 있습니다.
- 새로 들어온 도서 목록을 제공하며, 최신순으로 상위 50%의 도서를 보여줍니다.


#### 심미성 및 추가 기능 소개
- footer를 하단에 고정하여 일관성 있는 디자인을 완성했습니다.
- 마이페이지에서 체크박스를 통해 대출한 도서를 일괄 반납할 수 있습니다.
- '새로 들어온 도서' 에서는 SubQuery를 이용하여 도서 중 상위 50% 이내로 일찍 들어온 도서를 나열합니다.
- 각 책의 상세페이지에서는 LEFT JOIN을 이용하여 추가 정보를 출력합니다.
- 동일한 페이지 내에서 PHP를 이용해 Guest/User/Admin의 기능을 구분했습니다(/books/listall.php 등)
- 검색창에서 Radio Button을 이용하여 AND, OR 검색 옵션을 지정할 수 있습니다.
- CSS를 활용하여 심미성을 강조한 표 디자인을 완성했고, 마우스 포인터가 올려진 셀이 강조됩니다.


#### 보안 관련 기능 소개
- mysqli 함수를 직접 사용하지 않고, 객체를 생성하여 매개변수를 바인딩하는 형식으로 SQL Injection 취약점을 보완했습니다.
>> 기본적으로 bind_param() 메서드를 사용하나, 검색 환경과 같이 파라미터가 가변적인 경우에는 해당 함수를 사용할 수 없습니다.
>> 이에, 이곳에서는 예외적으로 TypeScript(JavaScript)/PHP를 활용하여 Client-/Server-Side 모두에서 SQL Injection에 사용되는 특수문자를 걸러내는 방식으로 동작합니다.
- 허가되지 않은 사용자가 권한이 없는 페이지에 접속할 경우 403 Error를 내며 연결이 차단됩니다.
- COOKIE를 이용하여 Client-및 Server-side에서 사용자 정보를 관리합니다.
- 주소창에 적절하지 않은 ISBN을 입력한 경우 404 Error를 내며 접속을 차단합니다.
- root 계정을 사용하지 않고 새로운 server 계정을 사용하여 꼭 필요한 권한 외 다른 권한 제거하였습니다.
- 모든 계정의 비밀번호는 SHA-256으로 안전하게 암호화되어 저장됩니다.